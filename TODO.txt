Initial Renderer
    We will need to have some special rendering functions which make use of
    assets that are contained in the rat pack and elsewhere, so we will need to
    have an xml configured renderer class. The only thing I can think of that
    it will need off the top of my head is a function to render a collection of
    points as a convex shape, which will require the xml configuration of
    a shape node graphic and a shape edge graphic. Also possibly a selected
    node and edge graphic but we will see how it all works.
    Also will want to implement in game gui rendering functions, which will
    possibly require the creation of a 9patch class. Will want to make it that
    the 9patches are also configured in the renderer xml file and stored by the
    renderer object.
    For the initial entity screen we need to be able to render boxes and
    points with a crosshair type of thing. I will add a point function that
    renders a crosshair, and a node function that renders some kind of circular
    thing.

Initial Entity Screen
    To start with the entity screen requires showing the entity's image, and
    allowing the user to pan with some key, and zoom in and out with the scroll
    wheel. Should also be allowed to press a button on the menu to recenter
    everything. Should also be a dialogue on the menu to choose the picture or
    choose a new picture (which is a sprite in the ratpack remember).
    When no picture has yet been chosen it should just show a nice white
    square or nothing. ALSO, you should be able to press a button to save the
    entity file and it should save.
    For the sprite selecting bit, it would be nice if it gave a list of the
    names of all of the sprites, and then let you narrow the list by typing in
    the start of the name of the sprite you want or something like that. Might
    be a bitch in the ass though so maybe don't bother.

Concave Shape
    I either need to steal or otherwise get my hands on a concave shape
    implementation which can be visualised one way or the other, and which can
    tell whether or not a point is inside the shape. The visualisation should
    probably be done seperately, now I think of it, because when we use it in
    the level screen it is going to be deformed so the built in representation
    is not going to work anway.
    As well as being able to tell you if a point is within the shape, it should
    probably also be able to take a point and tell you if that point is close
    enough to a node or an edge to be over that node or edge for the purposes
    of manipulating the shape.
    We should probably have tests for all that stuff also since it sounds
    compliocated and painful to manually test.

Renderer Update
    Add rendering concave shapes and stuff. Also add rendering 9patches so that
    we can use that for the gui.

Proper Entity Screen
    Same as before but it must now also allow you to manipulate the entity's
    wireframe and save it into the file.

Level Screen
    Must be able to set the background and pan around in 3d, entities must
    place themselves in the 3d joint and also rotate thus that it looks right,
    which also means I need to figure that out. Should be able to select entity
    files to add into the level

Look into built in editor
    Would be handy to have for level screen but I am not sure how hard it would
    be to get it to work so maybe no.

game gui
    Should be ripped off from the gui I developed for snowpea, that was great.
    Won't support keyboard only or gamepad but who gives a fuck? Not me. Text
    will be implemented with sf::Text so that I can do wrapping without too
    much pain.
